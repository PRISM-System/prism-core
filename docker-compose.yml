services:
  llm_agent:
    build:
      context: .
      args:
        - HUGGING_FACE_TOKEN=${HUGGING_FACE_TOKEN}
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://myuser:mysecretpassword@db:5432/mydatabase
      - VLLM_OPENAI_BASE_URL=http://vllm:8001/v1
      - OPENAI_API_KEY=EMPTY
      - RELOAD=true
    ports:
      - "8000:8000"
    volumes:
      - /CACHE/MODELS:/CACHE/MODELS
      - ~/.cache/huggingface:/root/.cache/huggingface
      # Hot reload volumes - mount source code directories and files
      - .:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # Use uvicorn with reload flag for hot reload
    command: sh -c "python authenticate_hf.py && python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - prism-shared-network

  vllm:
    image: vllm/vllm-openai:latest
    env_file:
      - .env
    environment:
      - HUGGING_FACE_HUB_TOKEN=${HUGGING_FACE_TOKEN}
    command: >
      --model ${VLLM_MODEL}
      --host ${VLLM_HOST:-0.0.0.0}
      --port ${VLLM_PORT:-8001}
      --gpu-memory-utilization 0.6
      ${VLLM_ARGS:- --enable-auto-tool-choice --tool-call-parser hermes}
    ports:
      - "${VLLM_PORT:-8001}:${VLLM_PORT:-8001}"
    volumes:
      - /CACHE/MODELS:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - prism-shared-network

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    ports:
      - "5432:5432"
    networks:
      - prism-shared-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  prism-shared-network:
    external: true